// <auto-generated />
using System;
using InvoiceSystem.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvoiceSystem.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250516130338_Create-Database")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvoiceSystem.Data.Models.Company", b =>
                {
                    b.Property<string>("VatNo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("CR")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameInArabic")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("VatNo");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("InvoiceSystem.Data.Models.CompanyBranch", b =>
                {
                    b.Property<string>("CompanyVatNo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("City")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("CompanyVatNo", "City");

                    b.ToTable("CompanyBranch");
                });

            modelBuilder.Entity("InvoiceSystem.Data.Models.Customer", b =>
                {
                    b.Property<string>("CompanyVatNo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("AddressInArabic")
                        .HasMaxLength(65)
                        .HasColumnType("int");

                    b.Property<int>("AddressInEnglish")
                        .HasMaxLength(65)
                        .HasColumnType("int");

                    b.Property<int>("CustomerVatNo")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<string>("NameInArabic")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.HasKey("CompanyVatNo", "Phone");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("InvoiceSystem.Data.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceNo"));

                    b.Property<string>("CompanyVatNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("DiscountPercent")
                        .HasColumnType("float");

                    b.Property<string>("PaymentWay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TaxPercent")
                        .HasColumnType("float");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalInvoicePriceAfterTax")
                        .HasColumnType("float");

                    b.Property<double>("TotalInvoicePriceBeforeTax")
                        .HasColumnType("float");

                    b.HasKey("InvoiceNo");

                    b.HasIndex("CompanyVatNo");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("InvoiceSystem.Data.Models.InvoiceProduct", b =>
                {
                    b.Property<int>("InvoiceNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<double>("PiecePrice")
                        .HasColumnType("float");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.HasKey("InvoiceNo", "ProductName");

                    b.ToTable("InvoiceProduct");
                });

            modelBuilder.Entity("InvoiceSystem.Data.Models.CompanyBranch", b =>
                {
                    b.HasOne("InvoiceSystem.Data.Models.Company", "Company")
                        .WithMany("CompanyBranches")
                        .HasForeignKey("CompanyVatNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("InvoiceSystem.Data.Models.Customer", b =>
                {
                    b.HasOne("InvoiceSystem.Data.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyVatNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("InvoiceSystem.Data.Models.Invoice", b =>
                {
                    b.HasOne("InvoiceSystem.Data.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyVatNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("InvoiceSystem.Data.Models.InvoiceProduct", b =>
                {
                    b.HasOne("InvoiceSystem.Data.Models.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("InvoiceSystem.Data.Models.Company", b =>
                {
                    b.Navigation("CompanyBranches");
                });
#pragma warning restore 612, 618
        }
    }
}
